Errado: 4(1/3), 15, 17 (1/5), 18
Nota: 20 - 0,44 - 2 - 0,4 - 1,33 = 15,83

1 - (2)

2 - (4)

3 - (1)

4 - (
class Shape implements Calculable{
    public abstract double solveArea();
}
)

5 - (2) ==> qualquer uma das opcoes seria display do child. 
            sera q pode class parent sem abstract 

6 - (2)

7 - (3)

8 - (3)

9 - (1)

10 - (2)

11 - (
    private transient Person owner; 
)

12 - (1)

13 - (3) ==> valueOf in a enum, will search for the given string in the enum names

14 - (1) ==> verify which thing each of them do

15 -

16 - (1)

17 - (
Class Pair<t extends Number>{
    private T num1;
    private T num2;

    public Pair(T num1, T num2)
    {
        this.num1 = num1;
        this.num2 = num2;
    }

    public double sum(){
        return (num1.doubleValue() + num2.doubleNum());
    }
}

)

18 - (
    ArrayList<? super B> list;
)

Erros: 

1- Classe Generica:
        . Quando queremos definir de um ponto na hierarquia(heranca) para cima, 
        definimos como <? super "className">, assim, so as classe acima da inidicada
        (incluido ela) seriam incluidas.
        . Quando queremos definir que sera todas apartir de uma base, sera usado o
        <T extends "baseClassName">

2- Add implements Initializable to the initialize in the controller of fxml

3- The resposability of each name in JavaFx
    - launch() -> start the aplication;
    - init() -> method used before the creation of the graphic interface to 
    prepare the resources(used before start);
    - start(Stage) -> abstract method of Application in which you will define and 
    start displaying the given scene in the stage;
    - main(), basic main;
    - stop(), clean the resources used when is to finish;

order: main() -> launch(args) -> init() -> start(stage) -> stop();


